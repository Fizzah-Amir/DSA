/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode(int x) : val(x), next(NULL) {}
 * };
 */
class Solution { //floyd's cycle detection
public:
    bool hasCycle(ListNode *head) {
        ListNode* f=head;
        ListNode* s=f;
        if(head==nullptr){
            return false;
        }
        while(f!=nullptr && f->next!=nullptr && head!=nullptr){
           // f=f->next+2; wromg
            f=f->next->next;//moving ptr 2 step ahead
            s=s->next;//moving pointer 1 step ahead
            if(s==f){
                return true;
            }
            else{
            continue;
            }
           
        }
        return false;
    }
};
